{"version":3,"sources":["components/Layouts/AppLayouts.js","business/Observers/List/queries.js","utils/prevent.js","components/Modal/index.js","components/Tabs/index.js","business/Alerts/Editor/AlertForm.js","business/Alerts/Editor/mutations.js","components/Divider/index.js","contexts/Products/queries.js","contexts/Products/index.js","business/Alerts/Editor/OrderForm.js","business/Alerts/Editor/index.js","theme/useScreenType.js","business/Events/List/EventCard.js","contexts/Snackbar/RequestErrorHandler.js","business/Alerts/List/NoData.js","business/Alerts/List/queries.js","business/Alerts/List/AlertList.js","business/Alerts/List/OrderList.js","business/Alerts/List/index.js","business/Observers/List/CardActions.js","business/Observers/List/ObserverCard.js","components/Layouts/Container.js","business/Observers/CandlesModal.js","components/Inputs/Form.js","business/Observers/mutations.js","business/Observers/EditModal.js","business/Observers/List/index.js","components/Inputs/Checkbox/index.js","business/Events/List/Filters.js","business/Events/List/queries.js","business/Events/List/List.js","business/Events/List/index.js","routes/Home/background.svg","routes/Home/Hero.js","business/Events/List/subscriptions.js","components/Footer/index.js","routes/Home/logo.svg","routes/Home/Header.js","routes/Home/index.js","theme/utils.js","components/Buttons/Button.js","components/Inputs/FormGroup.js","components/Inputs/Input/index.js","components/Inputs/BaseTextArea.js","components/Inputs/TextArea/index.js","components/Inputs/Select/index.js","components/Inputs/BaseInput.js"],"names":["RootLayout","styled","div","MainTagLayout","main","GET_OBSERVERS","gql","prevent","cb","e","preventDefault","stopPropagation","args","BaseModal","setAppElement","computeMaxWidth","size","theme","modal","smallWidth","mediumWidth","largeWidth","computeMinWidth","getStyle","overlay","zIndex","display","justifyContent","alignItems","background","hexToRgbA","white","outline","content","position","top","left","right","bottom","background1","border","divider","width","maxHeight","maxWidth","minWidth","boxShadow","padding","overflowX","overflowY","Header","ModalContent","ModalActions","Modal","title","open","onAfterOpen","onClose","hasCloseButton","children","notCancellable","useTheme","style","isOpen","onRequestClose","shouldCloseOnEsc","shouldCloseOnOverlayClick","IconButton","onClick","icon","defaultProps","disableBodySpacing","TabsContainer","TabsNavContainer","inModal","TabContentContainer","Tab","active","primary","Tabs","tabs","panes","value","onChange","paneProps","map","label","v","Component","undefined","AlertForm","formControl","errors","name","options","defaultValue","CREATE_ALERT","Divider","span","GET_PRODUCTS","ProductsContext","createContext","useProducts","products","useContext","ProductsProvider","Provider","data","useQuery","getProducts","CommonFormFields","Fragment","required","symbol","baseAsset","quoteAsset","placeholder","rules","validate","test","orderType","setOrderType","AlertEditor","observer","useState","setValue","useForm","control","handleSubmit","error","useSnackbar","useMutation","onError","message","onCompleted","refetchQueries","save","creating","loading","onSubmit","values","a","orderOptions","type","input","observerId","id","variables","Button","disabled","color","variant","useScreenType","isMobile","useMediaQuery","query","mediaQueries","isTablet","isDesktop","isUnderTablet","isUpperTablet","isUnderDesktop","OrderBlockContainer","OrderText","strong","default","errorDarken","OrderBlock","status","info","side","price","quantity","rel","target","href","orderId","CardContainer","article","FlexCardContainer","FlexInfoContainer","EventType","isOrder","successDarken","EventId","h1","EventCard","event","withoutOrderBlock","ucfirst","limitDirection","lim","Icon","Tooltip","dayjs","executedAt","format","RequestErrorHandler","errorToast","useEffect","closable","propTypes","PropTypes","shape","string","Container","greyLighten","grey","NoData","GET_PENDING_ALERTS","GET_EXECUTED_ALERTS","GET_PENDING_ORDERS","GET_EXECUTED_ORDERS","List","pending","QUERY","resultKey","RequestLoader","length","alert","PendingList","ExecutedList","OrderList","AlertsList","OrderPendingList","AlertPendingList","OrderExecutedList","AlertExecutedList","computePanes","addAlertModalOpen","setAddAlertModalOpen","Wrapper","ButtonContainer","Badge","secondary","CardActions","onShowAlerts","onShowOrders","countPendingAlerts","countPendingOrders","borderRadius","Flexbox","justify","align","dir","ObserverName","Asset","getColor","ArrowDir","Observation","ActionsContainer","Text","p","AddObserverCard","onAddObserver","className","ObserverCard","onOpenEditModal","onOpenCandlesModal","onAddAlert","lastData","setLastData","setData","toLowerCase","URL","socket","WebSocket","onmessage","eventData","JSON","parse","state","close","Number","CandlesModal","SYMBOL","Themes","LIGHT","locale","height","show","hide_side_toolbar","details","allow_symbol_change","Form","CREATE_OBSERVER","UPDATE_OBSERVER","DELETE_OBSERVER","EditModal","initialObserver","defaultValues","deleteObserver","deleting","product","find","autoFocus","window","confirm","CustomContainer","ObserversContainer","editModalOpen","setEditModalOpen","candlesModalOpen","setCandlesModalOpen","showAlerts","setShowAlerts","showOrders","setShowOrders","addAlert","setAddAlert","setInitialObserver","getObservers","obs","noMargin","Label","FakeInput","Error","BaseInput","HelperText","greyDarken","Checkbox","formRef","defaultChecked","helperText","checked","ref","FiltersContainer","Filters","eventFilters","onChangeEventFilters","pendingOnly","search","startIcon","GET_EVENTS","EventsContainer","useLazyQuery","getEvents","filters","EventList","setEventFilters","Title","Colored","Hero","ALERT_CHANGED","FooterContainer","Link","primaryDarken","Footer","StyledHeader","Logo","logo","useUser","logout","Home","useSubscription","alertChanged","onSubscriptionChanged","Products","hex","alpha","result","exec","r","parseInt","g","b","hexToRgb","BaseButton","button","fullWidth","fontSize","ContainedButton","forceDefault","getTextColor","transition","forceDarken","OutlinedButton","transparent","naked","forceLighten","IconContainer","tooltip","others","computeSize","ButtonComponent","props","colors","text","ControlledInput","Adornement","Input","startAdornement","endIcon","endAdornement","as","BaseTextArea","textarea","TextArea","rows","textAreaRef","createRef","resize","useCallback","current","scrollHeight","addEventListener","key","start","this","selectionStart","end","selectionEnd","substring","render","handleChange","select","Select","opt"],"mappings":"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","file":"static/js/6.c8abc113.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst RootLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst MainTagLayout = styled.main`\n  flex: 1;\n`;\n\nexport { RootLayout, MainTagLayout };\n","import { gql } from '@apollo/client';\n\nconst GET_OBSERVERS = gql`\n  query getObservers {\n    getObservers {\n      id\n      name\n      baseAsset\n      quoteAsset\n      countPendingAlerts\n      countPendingOrders\n    }\n  }\n`;\n\nexport { GET_OBSERVERS };\n","const prevent = (cb) => (e, ...args) => {\n  e.preventDefault();\n  e.stopPropagation();\n  cb(e, ...args);\n};\n\nexport default prevent;\n","import { useTheme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport IconButton from 'components/Buttons/IconButton';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport BaseModal from 'react-modal';\nimport { hexToRgbA } from 'theme/utils';\n\nBaseModal.setAppElement('#root');\n\nconst computeMaxWidth = ({ size, theme }) => {\n  switch (size) {\n    default:\n    case 'sm':\n      return theme.modal.smallWidth;\n    case 'md':\n      return theme.modal.mediumWidth;\n    case 'lg':\n      return theme.modal.largeWidth;\n  }\n};\n\nconst computeMinWidth = ({ size, theme }) => {\n  switch (size) {\n    default:\n    case 'sm':\n      return theme.modal.smallWidth;\n    case 'md':\n      return 'none';\n\n    case 'lg':\n      return 'none';\n  }\n};\n\nconst getStyle = ({ theme, size, zIndex }) => ({\n  overlay: {\n    zIndex,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: hexToRgbA(theme.white, 0.85),\n    outline: 'none',\n  },\n  content: {\n    position: 'relative',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    background: theme.background1,\n    border: theme.divider,\n    width: '100%',\n    maxHeight: '50%',\n    maxWidth: computeMaxWidth({ theme, size }),\n    minWidth: computeMinWidth({ theme, size }),\n    outline: 'none',\n    boxShadow: '0px 0px 2px 0px rgba(0, 0, 0, 0.1)',\n    padding: 0,\n    overflowX: 'hidden',\n    overflowY: 'auto',\n  },\n});\n\nconst Header = styled.div`\n  position: sticky;\n  top: 0;\n  width: 100%;\n  padding: 8px 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: ${({ theme }) => theme.divider};\n  background-color: ${({ theme }) => theme.background1};\n  z-index: 1;\n`;\n\nconst ModalContent = styled.div`\n  padding: 12px;\n  overflow-y: auto;\n`;\n\nconst ModalActions = styled.div`\n  position: sticky;\n  bottom: 0;\n  padding: 6px;\n  display: flex;\n  border-top: ${({ theme }) => theme.divider};\n  background: ${({ theme }) => theme.background1};\n  justify-content: flex-end;\n  & > *:not(:last-of-type) {\n    margin-right: 12px;\n  }\n`;\n\n/**\n * Modal\n * @component\n *\n */\nfunction Modal({\n  title,\n  open,\n  onAfterOpen,\n  onClose,\n  hasCloseButton,\n  size,\n  children,\n  notCancellable,\n  zIndex,\n}) {\n  const theme = useTheme();\n\n  return (\n    <BaseModal\n      style={getStyle({ theme, size, zIndex })}\n      isOpen={open}\n      onAfterOpen={onAfterOpen}\n      onRequestClose={onClose}\n      shouldCloseOnEsc={!notCancellable}\n      shouldCloseOnOverlayClick={!notCancellable}\n    >\n      <Header>\n        <span>{title}</span>\n        {hasCloseButton && (\n          <IconButton onClick={onClose} size='xs' icon='close' />\n        )}\n      </Header>\n      {children}\n    </BaseModal>\n  );\n}\n\nModal.defaultProps = {\n  title: null,\n  hasCloseButton: false,\n  size: 'sm',\n  children: null,\n  disableBodySpacing: false,\n  notCancellable: false,\n  zIndex: 100000,\n};\nModal.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  hasCloseButton: PropTypes.bool,\n  size: PropTypes.oneOf(['sm', 'md']),\n  notCancellable: PropTypes.bool,\n  zIndex: PropTypes.number,\n  children: PropTypes.node,\n};\n\nexport { ModalContent, ModalActions };\nexport default Modal;\n","import styled from '@emotion/styled';\nimport prevent from 'utils/prevent';\nimport PropTypes from 'prop-types';\n\nconst TabsContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-content: stretch;\n`;\n\nconst TabsNavContainer = styled.div`\n  position: ${({ inModal }) => (inModal ? 'sticky' : 'relative')};\n  top: ${({ inModal }) => (inModal ? '44px' : 'none')};\n  width: 100%;\n  display: flex;\n  align-content: stretch;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.background1};\n`;\n\nconst TabContentContainer = styled.div`\n  width: 100;\n  flex: 1;\n`;\n\nconst Tab = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  padding: 12px;\n  border-bottom: ${({ theme, active }) =>\n    active ? `2px solid ${theme.primary}` : `none`};\n  cursor: pointer;\n`;\n\nconst Tabs = ({ tabs, panes, value, onChange, inModal, paneProps }) => (\n  <TabsContainer>\n    <TabsNavContainer inModal={inModal}>\n      {tabs.map(({ label, value: v }) => (\n        <Tab onClick={prevent((e) => onChange(v))} active={v === value}>\n          {label}\n        </Tab>\n      ))}\n    </TabsNavContainer>\n    <TabContentContainer>\n      {panes.map(\n        ({ value: v, Component }) => v === value && <Component {...paneProps} />\n      )}\n    </TabContentContainer>\n  </TabsContainer>\n);\n\nTabs.defaultProps = {\n  value: undefined,\n  onChange: undefined,\n  inModal: false,\n  paneProps: {},\n};\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  panes: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      Component: PropTypes.func.isRequired,\n    }).isRequired\n  ),\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  inModal: PropTypes.bool,\n  paneProps: PropTypes.object,\n};\n\nexport default Tabs;\n","import { Input, Select } from 'components/Inputs';\nimport { ModalContent } from 'components/Modal';\nimport React from 'react';\n\nconst AlertForm = ({ formControl, errors }) => {\n  return (\n    <ModalContent>\n      <Input\n        name='lim'\n        label='Limit to reach'\n        formControl={formControl}\n        errors={errors}\n      />\n      <Select\n        options={[\n          { label: 'UP', value: 'UP' },\n          { label: 'DOWN', value: 'DOWN' },\n        ]}\n        defaultValue='UP'\n        name='limitDirection'\n        label='Direction (cross by)'\n        formControl={formControl}\n        errors={errors}\n      />\n    </ModalContent>\n  );\n};\n\nexport default AlertForm;\n","import { gql } from '@apollo/client';\n\nconst CREATE_ALERT = gql`\n  mutation createAlert($input: CreateAlertInput!) {\n    createAlert(input: $input) {\n      id\n      type\n      status\n    }\n  }\n`;\n\nexport { CREATE_ALERT };\n","import styled from '@emotion/styled';\n\nconst Divider = styled.span`\n  display: block;\n  border-bottom: ${({ theme }) => theme.divider};\n  margin: 12px 64px;\n`;\n\nexport default Divider;\n","import { gql } from '@apollo/client';\n\nconst GET_PRODUCTS = gql`\n  query getProducts {\n    getProducts {\n      symbol\n      baseAsset\n      quoteAsset\n    }\n  }\n`;\n\nexport default GET_PRODUCTS;\n","import React, { createContext, useContext } from 'react';\nimport { useQuery } from '@apollo/client';\nimport GET_PRODUCTS from './queries';\n\nconst ProductsContext = createContext();\n\nconst ProductsProvider = ({ children }) => {\n  const { Provider } = ProductsContext;\n\n  const { data } = useQuery(GET_PRODUCTS);\n\n  return (\n    <Provider\n      value={{\n        products: data?.getProducts || [],\n      }}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nconst useProducts = () => {\n  const { products } = useContext(ProductsContext);\n\n  return { products };\n};\n\nexport { useProducts };\nexport default ProductsProvider;\n","import Divider from 'components/Divider';\nimport { Input, Select } from 'components/Inputs';\nimport { ModalContent } from 'components/Modal';\nimport Tabs from 'components/Tabs';\nimport { useProducts } from 'contexts/Products';\nimport React from 'react';\n\nconst CommonFormFields = ({ formControl, errors }) => {\n  const { products } = useProducts();\n  return (\n    <React.Fragment>\n      <Select\n        required\n        formControl={formControl}\n        label='Symbol'\n        options={products.map(({ symbol, baseAsset, quoteAsset }) => ({\n          label: `${symbol} [${baseAsset}/${quoteAsset}]`,\n          value: `${baseAsset}${quoteAsset}`,\n        }))}\n        name='orderOptions[symbol]'\n        placeholder='No symbol selected'\n        errors={errors}\n      />\n      <Select\n        formControl={formControl}\n        label='Side'\n        options={[\n          {\n            label: 'BUY',\n            value: 'BUY',\n          },\n          {\n            label: 'SELL',\n            value: 'SELL',\n          },\n        ]}\n        name='orderOptions[side]'\n        defaultValue='BUY'\n        errors={errors}\n      />\n      <Input\n        name='orderOptions[quantity]'\n        label='Quantity'\n        required\n        rules={{\n          validate: (v) => /[+-]?([0-9]*[.])?[0-9]+/.test(v) || 'Error',\n        }}\n        formControl={formControl}\n        errors={errors}\n      />\n    </React.Fragment>\n  );\n};\n\nconst LimitTab = ({ formControl, errors }) => (\n  <React.Fragment>\n    <CommonFormFields formControl={formControl} errors={errors} />\n    <Input\n      name='orderOptions[price]'\n      label='Price'\n      rules={{\n        validate: (v) => /[+-]?([0-9]*[.])?[0-9]+/.test(v) || 'Error',\n      }}\n      required\n      formControl={formControl}\n      errors={errors}\n    />\n  </React.Fragment>\n);\nconst MarketTab = ({ formControl, errors }) => (\n  <React.Fragment>\n    <CommonFormFields formControl={formControl} errors={errors} />\n  </React.Fragment>\n);\n\nconst tabs = [\n  { label: 'Limit', value: 'limit' },\n  { label: 'Market', value: 'market' },\n];\n\nconst panes = [\n  { Component: LimitTab, value: 'limit' },\n  { Component: MarketTab, value: 'market' },\n];\n\nconst OrderForm = ({ formControl, errors, orderType, setOrderType }) => {\n  return (\n    <ModalContent>\n      <Input\n        required\n        name='lim'\n        label='Limit to reach'\n        formControl={formControl}\n        errors={errors}\n      />\n      <Select\n        options={[\n          { label: 'UP', value: 'UP' },\n          { label: 'DOWN', value: 'DOWN' },\n        ]}\n        defaultValue='UP'\n        name='limitDirection'\n        label='Direction (cross by)'\n        formControl={formControl}\n        errors={errors}\n      />\n      <Divider />\n      <Tabs\n        value={orderType}\n        onChange={setOrderType}\n        tabs={tabs}\n        panes={panes}\n        paneProps={{ formControl, errors }}\n      />\n    </ModalContent>\n  );\n};\n\nexport default OrderForm;\n","import { useMutation } from '@apollo/client';\nimport Button from 'components/Buttons/Button';\nimport Modal, { ModalActions } from 'components/Modal';\nimport Tabs from 'components/Tabs';\nimport { useSnackbar } from 'contexts/Snackbar';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport AlertForm from './AlertForm';\nimport { CREATE_ALERT } from './mutations';\nimport OrderForm from './OrderForm';\n\nconst tabs = [\n  {\n    label: 'Alert',\n    value: 'alert',\n  },\n  {\n    label: 'Order',\n    value: 'order',\n  },\n];\n\nconst panes = [\n  {\n    Component: AlertForm,\n    value: 'alert',\n  },\n  {\n    Component: OrderForm,\n    value: 'order',\n  },\n];\n\nconst AlertEditor = ({ observer, onClose }) => {\n  const [value, setValue] = useState('alert');\n  const { control, handleSubmit, errors } = useForm();\n  const [orderType, setOrderType] = useState('limit');\n  const { error } = useSnackbar();\n\n  const [save, { loading: creating }] = useMutation(CREATE_ALERT, {\n    onError: ({ message }) => error(message),\n    onCompleted: onClose,\n    refetchQueries: [\n      'getEvents',\n      value === 'alert' ? 'getPendingAlerts' : 'getPendingOrder',\n      'getObservers',\n    ],\n  });\n\n  return (\n    <Modal\n      open\n      size='sm'\n      title={`Add alert on ${observer.name}`}\n      hasCloseButton\n      onClose={onClose}\n      notCancellable\n    >\n      <form\n        onSubmit={handleSubmit(async (values) => {\n          const orderOptions =\n            value === 'alert'\n              ? undefined\n              : { ...values.orderOptions, type: orderType };\n\n          const input = {\n            observerId: observer.id,\n            ...values,\n            type: value,\n            orderOptions,\n          };\n          save({ variables: { input } });\n        })}\n      >\n        <Tabs\n          value={value}\n          onChange={setValue}\n          tabs={tabs}\n          panes={panes}\n          inModal\n          paneProps={{ formControl: control, errors, orderType, setOrderType }}\n        />\n        <ModalActions>\n          <Button\n            disabled={creating}\n            color='primary'\n            variant='contained'\n            type='submit'\n          >\n            Save\n          </Button>\n        </ModalActions>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AlertEditor;\n","import { useMediaQuery } from 'react-responsive';\n\nimport mediaQueries from './mediaQueries';\n\nconst useScreenType = () => {\n  const isMobile = useMediaQuery({\n    query: mediaQueries.isMobile,\n  });\n  const isTablet = useMediaQuery({\n    query: mediaQueries.isTablet,\n  });\n  const isDesktop = useMediaQuery({\n    query: mediaQueries.isDesktop,\n  });\n  const isUnderTablet = useMediaQuery({\n    query: mediaQueries.isUnderTablet,\n  });\n  const isUpperTablet = useMediaQuery({\n    query: mediaQueries.isUpperTablet,\n  });\n  const isUnderDesktop = useMediaQuery({\n    query: mediaQueries.isUnderDesktop,\n  });\n\n  return {\n    isMobile,\n    isTablet,\n    isDesktop,\n    isUnderTablet,\n    isUpperTablet,\n    isUnderDesktop,\n  };\n};\n\nexport default useScreenType;\n","import styled from '@emotion/styled';\nimport Icon from 'components/Icon';\nimport Tooltip from 'components/Tooltip';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport useScreenType from 'theme/useScreenType';\nimport ucfirst from 'utils/ucfirst';\n\nconst OrderBlockContainer = styled.div`\n  height: 100%;\n  padding: 6px;\n  border-radius: 3px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n`;\n\nconst OrderText = styled.strong`\n  color: ${({ theme, default: _default }) =>\n    _default ? theme.default : theme.errorDarken};\n`;\n\nconst OrderBlock = ({ status, orderOptions, info }) => (\n  <React.Fragment>\n    <OrderBlockContainer>\n      {status !== 'executed' && (\n        <React.Fragment>\n          [<OrderText default>{orderOptions.symbol}</OrderText>]{' '}\n          <OrderText default>{orderOptions.side}</OrderText>,{' '}\n          <OrderText>{orderOptions.type}</OrderText>\n          {orderOptions.type === 'LIMIT' && (\n            <OrderText>{`: ${orderOptions.price} (ba)`}</OrderText>\n          )}\n          , quantity:\n          <OrderText> {orderOptions.quantity}</OrderText>\n        </React.Fragment>\n      )}\n      {status === 'executed' && (\n        <React.Fragment>\n          [<OrderText default>{info.symbol}</OrderText>]{' '}\n          <OrderText default>{info.side}</OrderText>,{' '}\n          <OrderText>{info.type}</OrderText>\n          {info.type === 'LIMIT' && (\n            <OrderText>{`: ${info.price} (ba)`}</OrderText>\n          )}\n          , quantity:\n          <OrderText> {info.quantity}</OrderText>,{' '}\n          <a\n            rel='noreferrer'\n            target='_blank'\n            href='https://www.binance.com/en/my/orders/exchange/openorder'\n          >\n            {info.orderId}\n          </a>\n        </React.Fragment>\n      )}\n    </OrderBlockContainer>\n    {status === 'failed' && (\n      <OrderBlockContainer>\n        <OrderText>{info.error}</OrderText>\n      </OrderBlockContainer>\n    )}\n  </React.Fragment>\n);\n\nconst CardContainer = styled.article`\n  padding: 12px;\n  &:not(:last-child) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n  }\n`;\n\nconst FlexCardContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FlexInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  & > *:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n\nconst EventType = styled.div`\n  padding: 6px 12px;\n  border-radius: 3px;\n  min-width: 75px;\n  text-align: center;\n  border: 2px solid;\n  border-color: ${({ theme, isOrder }) =>\n    isOrder ? theme.errorDarken : theme.successDarken};\n  color: ${({ theme, isOrder }) =>\n    isOrder ? theme.errorDarken : theme.successDarken};\n`;\n\nconst EventId = styled.h1`\n  font-size: 24px;\n  margin: 0;\n  min-width: 60px;\n`;\n\nconst EventCard = ({ event, withoutOrderBlock }) => {\n  const { isUnderTablet } = useScreenType();\n  return (\n    <CardContainer>\n      <FlexCardContainer>\n        <FlexInfoContainer>\n          <EventId>#{event.id}</EventId>\n          <EventType isOrder={event.type === 'order'}>\n            {ucfirst(event.type)}\n          </EventType>\n          <div>\n            <div>\n              <strong>{`${event.observer.baseAsset}/${event.observer.quoteAsset}`}</strong>\n            </div>\n            <div>\n              <strong>{event.limitDirection}</strong> - limit:{' '}\n              <strong>\n                {event.lim} {event.observer.quoteAsset}\n              </strong>\n            </div>\n          </div>\n          {event.type === 'order' && !isUnderTablet && !withoutOrderBlock && (\n            <OrderBlock\n              status={event.status}\n              orderOptions={event.orderOptions}\n              info={event.info}\n            />\n          )}\n        </FlexInfoContainer>\n        {event.status === 'pending' && (\n          <Icon icon='processing' color='warningDarken' />\n        )}\n        {event.status === 'executed' && (\n          <Tooltip\n            title={`Executed at ${dayjs(event.executedAt).format(\n              'DD/MM/YYYY HH:mm:ss'\n            )}`}\n          >\n            <Icon icon='validCircle' color='successDarken' />\n          </Tooltip>\n        )}\n        {event.status === 'failed' && (\n          <Tooltip\n            title={`Failed at ${dayjs(event.executedAt).format(\n              'DD/MM/YYYY HH:mm:ss'\n            )}`}\n          >\n            <Icon icon='failed' color='errorDarken' />\n          </Tooltip>\n        )}\n      </FlexCardContainer>\n    </CardContainer>\n  );\n};\n\nexport default EventCard;\n","import { useEffect } from 'react';\nimport { useSnackbar } from '.';\nimport PropTypes from 'prop-types';\n\nconst RequestErrorHandler = ({ error }) => {\n  const { error: errorToast } = useSnackbar();\n\n  useEffect(() => {\n    if (error) {\n      errorToast(error.message || 'Unknow error', { closable: true });\n    }\n  }, [error]);\n\n  return null;\n};\n\nRequestErrorHandler.defaultProps = {\n  error: undefined,\n};\n\nRequestErrorHandler.propTypes = {\n  error: PropTypes.shape({ message: PropTypes.string }),\n};\n\nexport default RequestErrorHandler;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst Container = styled.div`\n  padding: 12px;\n  background-color: ${({ theme }) => theme.greyLighten};\n  color: ${({ theme }) => theme.grey};\n  text-align: center;\n`;\n\nconst NoData = () => {\n  return <Container>Nothing to show</Container>;\n};\n\nexport default NoData;\n","import { gql } from '@apollo/client';\n\nconst GET_PENDING_ALERTS = gql`\n  query getPendingAlerts($id: ID!) {\n    getPendingAlerts(id: $id) {\n      id\n      lim\n      limitDirection\n      status\n      type\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        baseAsset\n        quoteAsset\n      }\n    }\n  }\n`;\nconst GET_EXECUTED_ALERTS = gql`\n  query getExecutedAlerts($id: ID!) {\n    getExecutedAlerts(id: $id) {\n      id\n      lim\n      limitDirection\n      status\n      type\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        baseAsset\n        quoteAsset\n      }\n    }\n  }\n`;\n\nconst GET_PENDING_ORDERS = gql`\n  query getPendingOrders($id: ID!) {\n    getPendingOrders(id: $id) {\n      id\n      lim\n      limitDirection\n      status\n      type\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        baseAsset\n        quoteAsset\n      }\n    }\n  }\n`;\nconst GET_EXECUTED_ORDERS = gql`\n  query getExecutedOrders($id: ID!) {\n    getExecutedOrders(id: $id) {\n      id\n      lim\n      limitDirection\n      status\n      type\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        baseAsset\n        quoteAsset\n      }\n    }\n  }\n`;\n\nexport {\n  GET_PENDING_ALERTS,\n  GET_PENDING_ORDERS,\n  GET_EXECUTED_ALERTS,\n  GET_EXECUTED_ORDERS,\n};\n","import { useQuery } from '@apollo/client';\nimport EventCard from 'business/Events/List/EventCard';\nimport RequestLoader from 'components/Loader/RequestLoader';\nimport RequestErrorHandler from 'contexts/Snackbar/RequestErrorHandler';\nimport React from 'react';\n\nimport NoData from './NoData';\nimport { GET_EXECUTED_ALERTS, GET_PENDING_ALERTS } from './queries';\n\nconst List = ({ observer, type }) => {\n  const pending = type === 'pending';\n  const QUERY = pending ? GET_PENDING_ALERTS : GET_EXECUTED_ALERTS;\n  const resultKey = pending ? 'getPendingAlerts' : 'getExecutedAlerts';\n\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { id: observer.id },\n  });\n\n  if (error) return <RequestErrorHandler error={error} />;\n  if (loading) return <RequestLoader />;\n\n  if (data?.[resultKey].length === 0) return <NoData />;\n  return data?.[resultKey].map((alert) => (\n    <EventCard withoutOrderBlock event={alert} />\n  ));\n};\n\nconst PendingList = ({ observer }) => (\n  <List observer={observer} type='pending' />\n);\n\nconst ExecutedList = ({ observer }) => (\n  <List observer={observer} type='executed' />\n);\n\nexport { ExecutedList, PendingList };\n","import { useQuery } from '@apollo/client';\nimport EventCard from 'business/Events/List/EventCard';\nimport RequestLoader from 'components/Loader/RequestLoader';\nimport RequestErrorHandler from 'contexts/Snackbar/RequestErrorHandler';\nimport React from 'react';\nimport NoData from './NoData';\n\nimport { GET_EXECUTED_ORDERS, GET_PENDING_ORDERS } from './queries';\n\nconst OrderList = ({ observer, type }) => {\n  const pending = type === 'pending';\n  const QUERY = pending ? GET_PENDING_ORDERS : GET_EXECUTED_ORDERS;\n  const resultKey = pending ? 'getPendingOrders' : 'getExecutedOrders';\n\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { id: observer.id },\n  });\n\n  if (error) return <RequestErrorHandler error={error} />;\n  if (loading) return <RequestLoader />;\n\n  if (data?.[resultKey].length === 0) return <NoData />;\n  return data?.[resultKey].map((alert) => (\n    <EventCard withoutOrderBlock event={alert} />\n  ));\n};\n\nconst PendingList = ({ observer }) => (\n  <OrderList observer={observer} type='pending' />\n);\n\nconst ExecutedList = ({ observer }) => (\n  <OrderList observer={observer} type='executed' />\n);\n\nexport { ExecutedList, PendingList };\n","import Button from 'components/Buttons/Button';\nimport Modal, { ModalActions } from 'components/Modal';\nimport Tabs from 'components/Tabs';\nimport React from 'react';\nimport { useState } from 'react';\nimport ucfirst from 'utils/ucfirst';\nimport AlertEditor from '../Editor';\n\nimport {\n  ExecutedList as AlertExecutedList,\n  PendingList as AlertPendingList,\n} from './AlertList';\nimport {\n  ExecutedList as OrderExecutedList,\n  PendingList as OrderPendingList,\n} from './OrderList';\n\nconst tabs = [\n  { label: 'Pending', value: 'pending' },\n  { label: 'Executed', value: 'executed' },\n];\n\nconst computePanes = (isOrder) => [\n  {\n    Component: isOrder ? OrderPendingList : AlertPendingList,\n    value: 'pending',\n  },\n  {\n    Component: isOrder ? OrderExecutedList : AlertExecutedList,\n    value: 'executed',\n  },\n];\n\nconst AlertsList = ({ observer, onClose, isOrder }) => {\n  const [value, setValue] = useState('pending');\n  const panes = computePanes(isOrder);\n  const [addAlertModalOpen, setAddAlertModalOpen] = useState(false);\n\n  const onAddAlert = () => setAddAlertModalOpen(true);\n  const onCloseAddAlert = () => setAddAlertModalOpen(false);\n\n  return (\n    <Modal\n      open\n      hasCloseButton\n      onClose={onClose}\n      title={`${ucfirst(value)} ${isOrder ? 'orders' : 'alerts'}`}\n      size='md'\n    >\n      <Tabs\n        inModal\n        value={value}\n        tabs={tabs}\n        panes={panes}\n        onChange={setValue}\n        paneProps={{ observer }}\n      />\n      <ModalActions>\n        <Button onClick={onAddAlert} color='primary' variant='outlined'>\n          Add alert\n        </Button>\n      </ModalActions>\n      {addAlertModalOpen && (\n        <AlertEditor observer={observer} onClose={onCloseAddAlert} />\n      )}\n    </Modal>\n  );\n};\n\nexport default AlertsList;\n","import styled from '@emotion/styled';\nimport Button from 'components/Buttons/Button';\nimport React, { useState } from 'react';\nimport prevent from 'utils/prevent';\nimport AlertsList from 'business/Alerts/List';\n\nconst Wrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  & > * {\n    margin-right: 12px;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  position: relative;\n`;\n\nconst Badge = styled.span`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 22px;\n  height: 22px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.secondary};\n  border-radius: 50%;\n  transform: translateX(50%) translateY(-50%);\n  border: 3px solid white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 10px;\n  line-height: 10px;\n`;\n\nconst CardActions = ({ observer, onShowAlerts, onShowOrders }) => {\n  return (\n    <Wrapper>\n      <ButtonContainer>\n        <Button\n          color='primary'\n          onClick={prevent((e) => onShowAlerts(e, observer))}\n        >\n          Alerts\n        </Button>\n        <Badge>{observer.countPendingAlerts}</Badge>\n      </ButtonContainer>\n      <ButtonContainer>\n        <Button\n          color='primary'\n          onClick={prevent((e) => onShowOrders(e, observer))}\n        >\n          Orders\n        </Button>\n        <Badge>{observer.countPendingOrders}</Badge>\n      </ButtonContainer>\n    </Wrapper>\n  );\n};\n\nexport default CardActions;\n","import styled from '@emotion/styled';\nimport Button from 'components/Buttons/Button';\nimport IconButton from 'components/Buttons/IconButton';\nimport Icon from 'components/Icon';\nimport Tooltip from 'components/Tooltip';\nimport React, { useEffect, useState } from 'react';\nimport CardActions from './CardActions';\n\nconst Container = styled.div`\n  position: relative;\n  background: ${({ theme }) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.125);\n  padding: 16px;\n  min-height: 100%;\n  min-width: 250px;\n  transition: all 0.25s;\n  @media ${({ theme }) => theme.isUpperTablet} {\n    &:not(.add):hover {\n      transform: translateY(-10px);\n    }\n  }\n  &:hover .observer-card-action-container {\n    display: flex;\n  }\n`;\n\nconst Flexbox = styled.div`\n  display: flex;\n  justify-content: ${({ justify }) => justify || 'center'};\n  align-items: ${({ align }) => align || 'center'};\n  flex-direction: ${({ dir }) => dir || 'row'};\n`;\n\nconst ObserverName = styled.div`\n  font-weight: bold;\n`;\n\nconst Asset = styled.span`\n  color: ${({ theme }) => theme.getColor('grey')};\n`;\n\nconst ArrowDir = styled.div`\n  margin-left: 8px;\n  transform: ${({ color }) =>\n    color === 'successDarken'\n      ? 'rotate(-45deg)'\n      : color === 'errorDarken'\n      ? 'rotate(45deg)'\n      : 'none'};\n  display: ${({ color }) => !color && 'hidden'};\n  transition: all 0.25s ease;\n`;\n\nconst Observation = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 16px;\n  color: ${({ theme, color }) => theme.getColor(color)};\n`;\n\nconst ActionsContainer = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: none;\n  @media ${({ theme }) => theme.isUnderTablet} {\n    display: flex;\n  }\n`;\n\nconst ObserverCard = ({\n  observer,\n  onOpenEditModal,\n  onOpenCandlesModal,\n  onShowAlerts,\n  onShowOrders,\n  onAddAlert,\n}) => {\n  const [lastData, setLastData] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const symbol = `${observer.baseAsset}${observer.quoteAsset}`.toLowerCase();\n    const URL = `wss://stream.binance.com:9443/ws/${symbol}@ticker`;\n    let socket = new WebSocket(URL);\n    socket.onmessage = (event) => {\n      const eventData = JSON.parse(event.data);\n      setData((state) => {\n        setLastData(state);\n        return eventData;\n      });\n    };\n\n    return () => socket && socket.close();\n  }, [observer.baseAsset, observer.quoteAsset]);\n\n  const color =\n    (Number(data?.['c']) > Number(lastData?.['c']) && 'successDarken') ||\n    (Number(data?.['c']) < Number(lastData?.['c']) && 'errorDarken');\n\n  return (\n    <Container>\n      <Flexbox align='flex-start' justify='space-between'>\n        <ObserverName>{observer.name}</ObserverName>\n        <ActionsContainer className='observer-card-action-container'>\n          <Tooltip title='Create alert'>\n            <IconButton\n              onClick={(e) => onAddAlert(e, observer)}\n              icon='add'\n              size='xs'\n            />\n          </Tooltip>\n          <Tooltip title='CandleSticks'>\n            <IconButton\n              onClick={(e) => onOpenCandlesModal(e, observer)}\n              icon='candleStick'\n              size='xs'\n            />\n          </Tooltip>\n          <Tooltip title='Edit observer'>\n            <IconButton\n              onClick={(e) => onOpenEditModal(e, observer)}\n              icon='edit'\n              size='xs'\n            />\n          </Tooltip>\n        </ActionsContainer>\n      </Flexbox>\n      <Asset>{observer.baseAsset}</Asset> / <Asset>{observer.quoteAsset}</Asset>\n      <Observation color={color}>\n        {!data && <Icon icon='loader' size='xs' />}\n        {data && (\n          <React.Fragment>\n            {data['c']}{' '}\n            <ArrowDir color={color}>\n              <Icon icon='arrowSkin' color={color} size='xs' />\n            </ArrowDir>\n          </React.Fragment>\n        )}\n      </Observation>\n      <CardActions\n        observer={observer}\n        onShowAlerts={onShowAlerts}\n        onShowOrders={onShowOrders}\n      />\n    </Container>\n  );\n};\n\nconst Text = styled.p`\n  text-align: center;\n`;\n\nconst AddObserverCard = ({ onAddObserver }) => {\n  return (\n    <Container className='add'>\n      <Flexbox dir='column'>\n        <Text>Add new observer at any time</Text>\n        <Button onClick={onAddObserver} color='primary'>\n          Add observer\n        </Button>\n      </Flexbox>\n    </Container>\n  );\n};\n\nexport { AddObserverCard };\nexport default ObserverCard;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  max-width: 978px;\n  margin: auto;\n  @media ${({ theme }) => theme.isUnderTablet} {\n    padding: 0px 24px;\n  }\n`;\n\nexport default Container;\n","import Modal from 'components/Modal';\nimport React from 'react';\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\n\nconst CandlesModal = ({ observer, onClose }) => {\n  const SYMBOL = `${observer.baseAsset}${observer.quoteAsset}`;\n  return (\n    <Modal\n      size='lg'\n      title={observer.name}\n      hasCloseButton\n      open\n      onClose={onClose}\n    >\n      <TradingViewWidget\n        symbol={`BINANCE:${SYMBOL}`}\n        theme={Themes.LIGHT}\n        locale='fr'\n        width='100%'\n        height={800}\n        show\n        hide_side_toolbar={false}\n        details\n        allow_symbol_change={false}\n      />\n    </Modal>\n  );\n};\n\nexport default CandlesModal;\n","import React from 'react';\n\nconst Form = ({ onSubmit, children }) => {\n  return <form onSubmit={onSubmit}>{children}</form>;\n};\n\nexport default Form;\n","import { gql } from '@apollo/client';\n\nconst CREATE_OBSERVER = gql`\n  mutation createObserver($input: CreateObserverInput!) {\n    createObserver(input: $input) {\n      id\n      name\n      baseAsset\n      quoteAsset\n    }\n  }\n`;\n\nconst UPDATE_OBSERVER = gql`\n  mutation updateObserver($id: ID!, $input: UpdateObserverInput!) {\n    updateObserver(id: $id, input: $input) {\n      id\n      name\n      baseAsset\n      quoteAsset\n    }\n  }\n`;\n\nconst DELETE_OBSERVER = gql`\n  mutation deleteObserver($id: ID!) {\n    deleteObserver(id: $id)\n  }\n`;\n\nexport { CREATE_OBSERVER, UPDATE_OBSERVER, DELETE_OBSERVER };\n","import { useMutation } from '@apollo/client';\nimport Button from 'components/Buttons/Button';\nimport { Input, Select } from 'components/Inputs';\nimport Form from 'components/Inputs/Form';\nimport Modal, { ModalActions, ModalContent } from 'components/Modal';\nimport { useProducts } from 'contexts/Products';\nimport { useSnackbar } from 'contexts/Snackbar';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CREATE_OBSERVER, UPDATE_OBSERVER, DELETE_OBSERVER } from './mutations';\n\nconst EditModal = ({ initialObserver, onClose }) => {\n  const { control, handleSubmit, errors } = useForm({\n    defaultValues: { initialObserver },\n  });\n  const creating = !initialObserver;\n  const title = creating\n    ? 'New observer'\n    : `Editing ${initialObserver.name} ...`;\n  const { error } = useSnackbar();\n\n  const [save, { loading }] = useMutation(\n    creating ? CREATE_OBSERVER : UPDATE_OBSERVER,\n    {\n      onError: ({ message }) => error(message),\n      onCompleted: () => onClose && onClose(),\n      refetchQueries: ['getObservers'],\n    }\n  );\n\n  const [deleteObserver, { loading: deleting }] = useMutation(DELETE_OBSERVER, {\n    refetchQueries: ['getObservers'],\n    onCompleted: () => onClose && onClose(),\n    onError: ({ message }) => error(message),\n  });\n\n  const { products } = useProducts();\n\n  return (\n    <Modal notCancellable title={title} hasCloseButton open onClose={onClose}>\n      <Form\n        onSubmit={handleSubmit(async (values) => {\n          const { name, symbol } = values;\n          const product = products.find((p) => p.symbol === symbol);\n\n          if (!product) {\n            error('Choose product before continue.');\n            return;\n          }\n\n          const { baseAsset, quoteAsset } = product;\n\n          const input = {\n            name,\n            baseAsset,\n            quoteAsset,\n          };\n\n          const variables = creating\n            ? { input }\n            : { id: initialObserver.id, input };\n\n          save({\n            variables,\n          });\n        })}\n      >\n        <ModalContent>\n          <Input\n            autoFocus\n            required\n            formControl={control}\n            label='Observer name'\n            placeholder='E.g Observer BTC/USDT'\n            name='name'\n            defaultValue={initialObserver?.name}\n            errors={errors}\n          />\n          <Select\n            required\n            errors={errors}\n            formControl={control}\n            label='Pair to observer'\n            options={products.map(({ symbol, baseAsset, quoteAsset }) => ({\n              label: `${symbol} [${baseAsset}/${quoteAsset}]`,\n              value: `${baseAsset}${quoteAsset}`,\n            }))}\n            name='symbol'\n            placeholder='No symbol selected'\n            defaultValue={`${initialObserver?.baseAsset}${initialObserver?.quoteAsset}`}\n            disabled={!creating}\n          />\n        </ModalContent>\n\n        <ModalActions>\n          {!creating && (\n            <Button\n              onClick={() =>\n                window.confirm('This action cannot be undo. Are you sure?') &&\n                deleteObserver({ variables: { id: initialObserver.id } })\n              }\n              disabled={loading || deleting}\n              variant='contained'\n              color='error'\n            >\n              Delete\n            </Button>\n          )}\n          <Button\n            disabled={loading || deleting}\n            type='submit'\n            variant='contained'\n            color='primary'\n          >\n            Save\n          </Button>\n        </ModalActions>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default EditModal;\n","import { useQuery } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { GET_OBSERVERS } from './queries';\nimport styled from '@emotion/styled';\nimport { AddObserverCard } from './ObserverCard';\nimport ObserverCard from './ObserverCard';\nimport RequestErrorHandler from 'contexts/Snackbar/RequestErrorHandler';\nimport Container from 'components/Layouts/Container';\nimport CandlesModal from '../CandlesModal';\nimport EditModal from '../EditModal';\nimport AlertsList from 'business/Alerts/List';\nimport AlertEditor from 'business/Alerts/Editor';\n\nconst CustomContainer = styled.div`\n  margin-top: -100px;\n`;\n\nconst ObserversContainer = styled.div`\n  max-width: 100vw;\n  padding: 16px;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  display: flex;\n  justify-content: flex-start;\n  @media ${({ theme }) => theme.isUpperTablet} {\n    justify-content: center;\n  }\n  & > *:not(:last-of-type) {\n    margin-right: 16px;\n  }\n`;\n\nconst Text = styled.div`\n  color: ${({ theme }) => theme.white};\n`;\n\nconst List = () => {\n  const { data, error } = useQuery(GET_OBSERVERS);\n\n  const [editModalOpen, setEditModalOpen] = useState(() => false);\n  const [candlesModalOpen, setCandlesModalOpen] = useState(() => false);\n  const [showAlerts, setShowAlerts] = useState(false);\n  const [showOrders, setShowOrders] = useState(false);\n  const [addAlert, setAddAlert] = useState(false);\n  const [initialObserver, setInitialObserver] = useState(() => false);\n\n  const onOpenEditModal = (e, observer) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setInitialObserver(observer);\n    setEditModalOpen(true);\n  };\n  const onCloseEditModal = () => {\n    setInitialObserver(null);\n    setEditModalOpen(false);\n  };\n\n  const onOpenCandlesModal = (e, observer) => {\n    setInitialObserver(observer);\n    setCandlesModalOpen(true);\n  };\n  const onCloseCandlesModal = () => {\n    setInitialObserver(null);\n    setCandlesModalOpen(false);\n  };\n\n  const onShowAlerts = (e, observer) => {\n    setInitialObserver(observer);\n    setShowAlerts(true);\n  };\n  const onCloseAlerts = (e) => {\n    setInitialObserver(null);\n    setShowAlerts(false);\n  };\n\n  const onShowOrders = (e, observer) => {\n    setInitialObserver(observer);\n    setShowOrders(true);\n  };\n  const onCloseOrders = (e) => {\n    setInitialObserver(null);\n    setShowOrders(false);\n  };\n\n  const onAddAlert = (e, observer) => {\n    setInitialObserver(observer);\n    setAddAlert(true);\n  };\n  const onCloseAddAlert = (e) => {\n    setInitialObserver(null);\n    setAddAlert(false);\n  };\n\n  if (error) return <RequestErrorHandler error={error} />;\n  if (!data) return null;\n\n  return (\n    <CustomContainer>\n      <Container>\n        <Text>\n          You are currently observing {data ? data.getObservers.length : '...'}{' '}\n          symbol(s)\n        </Text>\n      </Container>\n      <ObserversContainer>\n        <AddObserverCard onAddObserver={onOpenEditModal} />\n        {data &&\n          data.getObservers.map((obs) => (\n            <ObserverCard\n              observer={obs}\n              onOpenEditModal={onOpenEditModal}\n              onOpenCandlesModal={onOpenCandlesModal}\n              onShowAlerts={onShowAlerts}\n              onShowOrders={onShowOrders}\n              onAddAlert={onAddAlert}\n            />\n          ))}\n      </ObserversContainer>\n      {editModalOpen && (\n        <EditModal\n          initialObserver={initialObserver}\n          onClose={onCloseEditModal}\n        />\n      )}\n      {candlesModalOpen && (\n        <CandlesModal\n          observer={initialObserver}\n          onClose={onCloseCandlesModal}\n        />\n      )}\n      {showAlerts && initialObserver && (\n        <AlertsList observer={initialObserver} onClose={onCloseAlerts} />\n      )}\n      {showOrders && initialObserver && (\n        <AlertsList\n          isOrder\n          observer={initialObserver}\n          onClose={onCloseOrders}\n        />\n      )}\n      {addAlert && initialObserver && (\n        <AlertEditor observer={initialObserver} onClose={onCloseAddAlert} />\n      )}\n    </CustomContainer>\n  );\n};\n\nexport default List;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport BaseInput from '../BaseInput';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  margin-bottom: ${({ noMargin }) => (noMargin ? 0 : '12px')};\n  display: flex;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n  white-space: nowrap;\n  flex: 0;\n  display: flex;\n  align-items: center;\n  & > *:not(:first-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst FakeInput = styled.div`\n  outline-color: ${({ theme }) => theme.primary};\n`;\n\nconst ControlledInput = styled(BaseInput)`\n  flex: 1;\n  align-self: stretch;\n  height: 100%;\n  padding: 12px 8px;\n  &[type='color'] {\n    padding: 8px;\n    height: 40px;\n  }\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst Checkbox = ({\n  formRef,\n  rules,\n  errors,\n  label,\n  name,\n  defaultChecked,\n  required,\n  disabled,\n  helperText,\n  onChange,\n  checked,\n  noMargin,\n}) => (\n  <Container noMargin>\n    <Label>\n      <FakeInput>\n        <input\n          ref={formRef}\n          name={name}\n          type='checkbox'\n          required={required}\n          disabled={disabled}\n          defaultChecked={defaultChecked}\n          onChange={onChange}\n          checked={checked}\n        />\n      </FakeInput>\n      <span>\n        {label}\n        {required && '*'}\n      </span>\n    </Label>\n    {helperText && <HelperText>{helperText}</HelperText>}\n    {errors?.[name] && <Error>{errors[name].message}</Error>}\n  </Container>\n);\n\nCheckbox.defaultProps = {\n  defaultChecked: false,\n  onChange: undefined,\n  checked: undefined,\n};\n\nCheckbox.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  rules: PropTypes.object,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  defaultChecked: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Checkbox;\n","import styled from '@emotion/styled';\nimport Icon from 'components/Icon';\nimport { Input } from 'components/Inputs';\nimport Checkbox from 'components/Inputs/Checkbox';\nimport Container from 'components/Layouts/Container';\nimport React from 'react';\n\nconst FiltersContainer = styled.div`\n  margin-bottom: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Filters = ({ eventFilters, onChangeEventFilters }) => {\n  return (\n    <Container>\n      <FiltersContainer>\n        <Checkbox\n          label='Pending only'\n          checked={eventFilters.pendingOnly}\n          onChange={(e) =>\n            onChangeEventFilters('pendingOnly', !eventFilters.pendingOnly)\n          }\n        />\n        <Input\n          value={eventFilters.search}\n          placeholder='Search'\n          startIcon={<Icon icon='search' size='xs' />}\n          onChange={(e) => onChangeEventFilters('search', e.target.value)}\n        />\n      </FiltersContainer>\n    </Container>\n  );\n};\n\nexport default Filters;\n","import { gql } from '@apollo/client';\n\nconst GET_EVENTS = gql`\n  query getEvents($filters: EventFilters!) {\n    getEvents(filters: $filters) {\n      id\n      type\n      lim\n      limitDirection\n      status\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        quoteAsset\n        baseAsset\n      }\n    }\n  }\n`;\n\nexport { GET_EVENTS };\n","import { useLazyQuery } from '@apollo/client';\nimport styled from '@emotion/styled';\nimport NoData from 'business/Alerts/List/NoData';\nimport Container from 'components/Layouts/Container';\nimport RequestLoader from 'components/Loader/RequestLoader';\nimport RequestErrorHandler from 'contexts/Snackbar/RequestErrorHandler';\nimport React, { useEffect } from 'react';\nimport EventCard from './EventCard';\nimport { GET_EVENTS } from './queries';\n\nconst EventsContainer = styled.div`\n  border-radius: 3px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  margin-bottom: 16px;\n`;\n\nconst List = ({ eventFilters }) => {\n  const [getEvents, { data, error, loading }] = useLazyQuery(GET_EVENTS);\n  useEffect(() => {\n    getEvents({\n      variables: { filters: eventFilters },\n    });\n  }, [getEvents, eventFilters]);\n\n  if (loading) return <RequestLoader />;\n  if (error) return <RequestErrorHandler error={error} />;\n\n  if (data?.getEvents.length === 0)\n    return (\n      <Container>\n        <NoData />\n      </Container>\n    );\n\n  return (\n    <Container>\n      <EventsContainer>\n        {data?.getEvents.map((event) => (\n          <EventCard event={event} />\n        ))}\n      </EventsContainer>\n    </Container>\n  );\n};\n\nexport default List;\n","import React, { useState } from 'react';\nimport Filters from './Filters';\nimport List from './List';\n\nconst EventList = () => {\n  const [eventFilters, setEventFilters] = useState({\n    pendingOnly: false,\n    search: null,\n  });\n  const onChangeEventFilters = (name, v) =>\n    setEventFilters({ ...eventFilters, [name]: v });\n\n  return (\n    <React.Fragment>\n      <Filters\n        eventFilters={eventFilters}\n        onChangeEventFilters={onChangeEventFilters}\n      />\n      <List eventFilters={eventFilters} />\n    </React.Fragment>\n  );\n};\n\nexport default EventList;\n","export default __webpack_public_path__ + \"static/media/background.05a5b14a.svg\";","import styled from '@emotion/styled';\nimport Container from 'components/Layouts/Container';\nimport React from 'react';\n\nimport background from './background.svg';\n\nconst Wrapper = styled.div`\n  min-height: 500px;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: bottom center;\n  background-image: url(${background});\n  display: flex;\n  justify-content: center;\n`;\nconst Title = styled.div`\n  font-size: 48px;\n  color: white;\n`;\n\nconst Colored = styled.span`\n  color: ${({ theme }) => theme.primary};\n`;\n\nconst Hero = () => {\n  return (\n    <Wrapper>\n      <Container>\n        <Title>\n          <Colored>Automate</Colored> your strategies on\n          <br />\n          <Colored>real time</Colored> trade\n        </Title>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Hero;\n","import { gql } from '@apollo/client';\n\nconst ALERT_CHANGED = gql`\n  subscription alertChanged {\n    alertChanged {\n      id\n      type\n      lim\n      limitDirection\n      status\n      executedAt\n      orderOptions\n      info\n      observer {\n        id\n        quoteAsset\n        baseAsset\n      }\n    }\n  }\n`;\n\nexport { ALERT_CHANGED };\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst FooterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.secondary};\n  color: ${({ theme }) => theme.white};\n  padding: 24px;\n`;\n\nconst Link = styled.a`\n  color: ${({ theme }) => theme.primary};\n  &:hover {\n    color: ${({ theme }) => theme.primaryDarken};\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <FooterContainer>\n      Powered by @give-some-hours.{' '}\n      <Link href='mailto:give.some.hours@gmail.com'>\n        give.some.hours@gmail.com\n      </Link>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/logo.dad351e0.svg\";","import styled from '@emotion/styled';\nimport Button from 'components/Buttons/Button';\nimport { useUser } from 'contexts/User';\nimport React from 'react';\nimport { hexToRgbA } from 'theme/utils';\n\nimport logo from './logo.svg';\n\nconst StyledHeader = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  background-image: ${({ theme }) =>\n    `linear-gradient(to top, ${hexToRgbA(theme.secondary, 0)}, ${\n      theme.secondary\n    })`};\n`;\n\nconst Logo = styled.div`\n  width: 42px;\n  height: 42px;\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n`;\n\nconst Header = () => {\n  const [_, { logout }] = useUser();\n\n  return (\n    <StyledHeader>\n      <Logo />\n      <Button variant='contained' size='lg' color='primary' onClick={logout}>\n        Logout\n      </Button>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport { MainTagLayout, RootLayout } from 'components/Layouts/AppLayouts';\nimport ObserversList from 'business/Observers/List';\nimport EventsList from 'business/Events/List';\nimport ProductsProvider from 'contexts/Products';\n\nimport Hero from './Hero';\nimport { useSubscription } from '@apollo/client';\nimport { ALERT_CHANGED } from 'business/Events/List/subscriptions';\nimport { useSnackbar } from 'contexts/Snackbar';\nimport Footer from 'components/Footer';\nimport Header from './Header';\n\nconst Home = () => {\n  const { info } = useSnackbar();\n  const { data } = useSubscription(ALERT_CHANGED);\n\n  const onSubscriptionChanged = ({ alertChanged }) =>\n    info(`Alert #${alertChanged.id} has been triggered.`);\n\n  useEffect(() => {\n    if (data) {\n      onSubscriptionChanged(data);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <ProductsProvider>\n      <Header />\n      <Hero />\n      <RootLayout>\n        <MainTagLayout>\n          <ObserversList />\n          <EventsList />\n        </MainTagLayout>\n      </RootLayout>\n      <Footer />\n    </ProductsProvider>\n  );\n};\n\nexport default Home;\n","const componentToHex = (c) => {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\nconst rgbToHex = (r, g, b) =>\n  `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n\nconst hexToRgb = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n};\n\nconst hexToRgbA = (hex, alpha) => {\n  const { r, g, b } = hexToRgb(hex);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nfunction shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n\n  return '#' + RR + GG + BB;\n}\n\nconst lighten = (color) => {\n  return shadeColor(color, 40);\n};\nconst darken = (color) => {\n  return shadeColor(color, -40);\n};\n\nexport { rgbToHex, hexToRgb, hexToRgbA, lighten, darken };\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\nimport Icon from 'components/Icon';\nimport Loader from 'components/Loader/Loader';\nimport Tooltip from 'components/Tooltip';\nimport { useTheme } from '@emotion/react';\n\nconst BaseButton = styled.button`\n  outline-color: ${({ theme, color }) => theme.getColor(color)};\n  padding: 0;\n  margin: 0;\n  border: ${({ theme }) => theme.divider};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : 'auto')};\n  cursor: pointer;\n  padding: ${({ padding }) => padding};\n  font-size: ${({ fontSize }) => fontSize};\n`;\n\nconst ContainedButton = styled(BaseButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({ theme, color }) => theme.forceDefault(color)};\n  color: ${({ theme, color }) => theme.getTextColor(color)};\n  transition: ${({ theme }) => theme.transition};\n  :hover:not(:disabled) {\n    background-color: ${({ theme, color }) => theme.forceDarken(color)};\n  }\n  :disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nconst OutlinedButton = styled(BaseButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({ theme }) => theme.transparent};\n  color: ${({ theme, color }) => theme.getColor(color)};\n  border: ${({ theme, color, naked }) =>\n    naked ? 'none' : `1px solid ${theme.getColor(color)}`};\n  transition: ${({ theme }) => theme.transition};\n  :hover:not(:disabled) {\n    border-color: ${({ theme, color }) => theme.forceDarken(color)};\n    color: ${({ theme, color }) => theme.forceDarken(color)};\n    background: ${({ theme, color }) =>\n      hexToRgbA(theme.forceLighten(color), 0.125)};\n  }\n  :disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nconst IconContainer = styled.span`\n  margin-right: 6px;\n`;\n\nconst computeSize = (size) => {\n  switch (size) {\n    case 'sm':\n      return {\n        fontSize: '12px',\n        padding: '4px 8px',\n      };\n    default:\n    case 'md':\n      return {\n        fontSize: '13.33px',\n        padding: '6px 12px',\n      };\n    case 'lg':\n      return {\n        fontSize: '14.2px',\n        padding: '8px 16px',\n      };\n  }\n};\n\nconst Button = ({\n  variant,\n  color,\n  loading,\n  disabled,\n  children,\n  type,\n  icon,\n  size,\n  tooltip,\n  ...others\n}) => {\n  const { fontSize, padding } = computeSize(size);\n  const theme = useTheme();\n\n  let ButtonComponent = null;\n\n  switch (variant) {\n    default:\n    case 'outlined':\n    case 'naked':\n      ButtonComponent = OutlinedButton;\n      break;\n    case 'contained':\n      ButtonComponent = ContainedButton;\n      break;\n  }\n\n  if (tooltip)\n    ButtonComponent = ({ children, ...props }) => (\n      <Tooltip title={tooltip}>\n        <ButtonComponent {...props}>{children}</ButtonComponent>\n      </Tooltip>\n    );\n\n  return (\n    <ButtonComponent\n      type={type}\n      {...others}\n      color={color}\n      fontSize={fontSize}\n      padding={padding}\n      disabled={loading || disabled}\n      naked={variant === 'naked'}\n    >\n      {icon && !loading && (\n        <IconContainer>\n          <Icon\n            icon={icon}\n            size='xs'\n            color={variant !== 'contained' ? color : theme.colors.text(color)}\n          />\n        </IconContainer>\n      )}\n      {loading && (\n        <IconContainer>\n          <Loader\n            size='xs'\n            color={variant !== 'contained' ? color : theme.colors.text(color)}\n          />\n        </IconContainer>\n      )}\n      {children}\n    </ButtonComponent>\n  );\n};\n\nButton.defaultProps = {\n  color: 'default',\n  type: 'button',\n  variant: 'outlined',\n  size: 'sm',\n  tooltip: undefined,\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.string,\n  tooltip: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained']),\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst Group = styled.div`\n  & > *:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nconst FormGroup = ({ children }) => {\n  return <Group>{children}</Group>;\n};\n\nexport default FormGroup;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport BaseInput from '../BaseInput';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  width: auto;\n  background-color: ${({ theme }) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  &:has(input:focus) {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled(BaseInput)`\n  flex: 1;\n  align-self: stretch;\n  height: 100%;\n  padding: 12px 8px;\n  &[type='color'] {\n    padding: 8px;\n    height: 40px;\n  }\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst Adornement = styled.span`\n  color: ${({ theme }) => theme.greyDarken};\n`;\n\nconst Input = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  helperText,\n  placeholder,\n  startIcon,\n  startAdornement,\n  endIcon,\n  endAdornement,\n  onChange,\n  value,\n}) => (\n  <Container>\n    <Label>\n      {label}\n      {required && '*'}\n    </Label>\n    <FakeInput>\n      {startIcon && <span>{startIcon}</span>}\n      {startAdornement && <Adornement>{startAdornement}</Adornement>}\n      {formControl && (\n        <Controller\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          as={<ControlledInput />}\n        />\n      )}\n      {!formControl && (\n        <ControlledInput\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          onChange={onChange}\n          value={value}\n          placeholder={placeholder}\n        />\n      )}\n      {endAdornement && <span>{endAdornement}</span>}\n      {endIcon && <Adornement>{endIcon}</Adornement>}\n    </FakeInput>\n    {helperText && <HelperText>{helperText}</HelperText>}\n    {errors?.[name] && <Error>{errors[name].message}</Error>}\n  </Container>\n);\n\nInput.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n  name: undefined,\n  value: undefined,\n  onChange: undefined,\n};\n\nInput.propTypes = {\n  name: PropTypes.string,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Input;\n","import styled from '@emotion/styled';\n\nconst BaseTextArea = styled.textarea`\n  // reset\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: ${({ theme }) => theme.white};\n  outline: none;\n  font-family: inherit;\n`;\n\nexport default BaseTextArea;\n","import styled from '@emotion/styled';\nimport React, { createRef, useCallback, useEffect } from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\nimport BaseTextArea from '../BaseTextArea';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${(theme) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  & textarea:focus {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled(BaseTextArea)`\n  flex: 1;\n  align-self: stretch;\n  height: 100%;\n  padding: 12px 8px;\n  &[type='color'] {\n    padding: 8px;\n    height: 40px;\n  }\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst TextArea = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  rows,\n  helperText,\n  placeholder,\n}) => {\n  const textAreaRef = createRef();\n\n  const resize = useCallback(() => {\n    textAreaRef.current.style.height = 'auto';\n    textAreaRef.current.style.height = textAreaRef.current.scrollHeight + 'px';\n  }, [textAreaRef]);\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      resize();\n    }\n  }, [resize, textAreaRef]);\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.addEventListener('keydown', function (e) {\n        if (e.key === 'Tab') {\n          e.preventDefault();\n          let start = this.selectionStart;\n          let end = this.selectionEnd;\n\n          this.value =\n            this.value.substring(0, start) + '\\t' + this.value.substring(end);\n\n          this.selectionStart = this.selectionEnd = start + 1;\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [textAreaRef.current?.value]);\n\n  const handleChange = (e, cb) => {\n    resize();\n    cb(e);\n  };\n\n  return (\n    <Container>\n      <Label>\n        {label}\n        {required && '*'}\n      </Label>\n      <FakeInput>\n        <Controller\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          rows={rows}\n          render={({ onChange, value }) => (\n            <ControlledInput\n              ref={textAreaRef}\n              onChange={(e) => handleChange(e, onChange)}\n              value={value}\n            />\n          )}\n        />\n      </FakeInput>\n      {helperText && <HelperText>{helperText}</HelperText>}\n      {errors?.[name] && <Error>{errors[name].message}</Error>}\n    </Container>\n  );\n};\n\nTextArea.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n  rows: 5,\n};\n\nTextArea.propTypes = {\n  name: PropTypes.string.isRequired,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  rows: PropTypes.number,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default TextArea;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  background-color: ${(theme) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  & select:focus {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled.select`\n  outline: none;\n  height: 100%;\n  width: 100%;\n  margin-right: 6px;\n  padding: 12px 8px;\n  border: none;\n  background-color: ${(theme) => theme.white};\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst Select = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  helperText,\n  placeholder,\n  options,\n}) => (\n  <Container>\n    <Label>\n      {label}\n      {label && required && '*'}\n    </Label>\n    <FakeInput>\n      <Controller\n        autoFocus={autoFocus}\n        control={formControl}\n        rules={rules}\n        name={name}\n        type={type}\n        required={required}\n        disabled={disabled}\n        defaultValue={defaultValue}\n        placeholder={placeholder}\n        as={<ControlledInput />}\n      >\n        {placeholder && <option value={null}>{placeholder}</option>}\n        {options.map((opt) => (\n          <option value={opt.value}>{opt.label}</option>\n        ))}\n      </Controller>\n    </FakeInput>\n    {helperText && <HelperText>{helperText}</HelperText>}\n    {errors?.[name] && <Error>{errors[name].message}</Error>}\n  </Container>\n);\n\nSelect.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n};\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Select;\n","import styled from '@emotion/styled';\n\nconst BaseInput = styled.input`\n  // reset\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: ${({ theme }) => theme.white};\n  outline: none;\n`;\n\nexport default BaseInput;\n"],"sourceRoot":""}