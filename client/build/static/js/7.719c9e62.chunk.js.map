{"version":3,"sources":["components/Layouts/FlippableContainer.js","components/Security/mutations.js","components/Security/Signin.js","components/Security/Signup.js","routes/Security/index.js","theme/utils.js","components/Buttons/Button.js","components/Inputs/FormGroup.js","components/Inputs/Input/index.js","components/Inputs/BaseTextArea.js","components/Inputs/TextArea/index.js","components/Inputs/Select/index.js","components/Inputs/BaseInput.js"],"names":["CardContainer","styled","div","FlipCard","FlipInner","Face","FrontFace","BackFace","FlippableContainer","turned","frontFace","backFace","className","LOGIN","gql","Paper","theme","borderRadius","divider","background1","Title","h1","Subtitle","h2","Decorator","primary","Form","form","Actions","Signin","useForm","control","handleSubmit","history","useHistory","useUser","loginSuccess","errorToast","useSnackbar","error","useMutation","onCompleted","data","login","onError","message","closable","loading","name","formControl","label","type","required","placeholder","Button","fullWidth","color","variant","size","onClick","values","a","variables","replace","Container","secondary","QRCodeContainer","Signup","value","background2","Auth","isAuthenticated","state","useParams","useMemo","from","qs","parse","window","location","search","useEffect","routes","Home","path","includes","hexToRgbA","hex","alpha","result","exec","r","parseInt","g","b","hexToRgb","BaseButton","button","getColor","padding","fontSize","ContainedButton","forceDefault","getTextColor","transition","forceDarken","OutlinedButton","transparent","naked","forceLighten","IconContainer","span","disabled","children","icon","tooltip","others","computeSize","useTheme","ButtonComponent","props","title","colors","text","defaultProps","undefined","Label","FakeInput","white","ControlledInput","BaseInput","Error","errorDarken","HelperText","greyDarken","Adornement","Input","autoFocus","rules","errors","defaultValue","helperText","startIcon","startAdornement","endIcon","endAdornement","onChange","as","BaseTextArea","textarea","TextArea","rows","textAreaRef","createRef","resize","useCallback","current","style","height","scrollHeight","addEventListener","e","key","preventDefault","start","this","selectionStart","end","selectionEnd","substring","render","ref","cb","handleChange","select","Select","options","map","opt","input"],"mappings":"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","file":"static/js/7.719c9e62.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport React from 'react';\n\nconst CardContainer = styled.div`\n  width: 100%;\n`;\n\nconst FlipCard = styled.div`\n  background-color: transparent;\n  position: relative;\n  perspective: 1000px;\n`;\n\nconst FlipInner = styled.div`\n  transition: 0.9s;\n  transform-style: preserve-3d;\n  position: relative;\n  &.turned {\n    transform: rotateY(180deg);\n  }\n`;\n\nconst Face = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n`;\n\nconst FrontFace = styled.div`\n  z-index: 2;\n  /* for firefox 31 */\n  transform: rotateY(0deg);\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n`;\n\nconst BackFace = styled(Face)`\n  transform: rotateY(180deg);\n`;\n\nconst FlippableContainer = ({ turned, frontFace, backFace }) => {\n  return (\n    <CardContainer>\n      <FlipCard>\n        <FlipInner className={(turned && 'turned') || ''}>\n          <FrontFace>{frontFace}</FrontFace>\n          <BackFace>{backFace}</BackFace>\n        </FlipInner>\n      </FlipCard>\n    </CardContainer>\n  );\n};\n\nexport default FlippableContainer;\n","import { gql } from '@apollo/client';\n\nconst LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\nexport { LOGIN };\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Button from 'components/Buttons/Button';\nimport { Input } from 'components/Inputs';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from './mutations';\nimport { useUser } from 'contexts/User';\nimport { useSnackbar } from 'contexts/Snackbar';\n\nconst Paper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  background-color: ${({ theme }) => theme.background1};\n  padding: 12px 32px;\n`;\n\nconst Title = styled.h1`\n  font-size: 18px;\n  text-align: center;\n  font-weight: normal;\n`;\n\nconst Subtitle = styled.h2`\n  font-size: 12px;\n  text-align: center;\n  font-weight: normal;\n`;\n\nconst Decorator = styled.div`\n  height: 3px;\n  width: 50px;\n  background-color: ${({ theme }) => theme.primary};\n  margin: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst Form = styled.form`\n  min-width: 250px;\n  margin-top: 32px;\n  margin-bottom: 24px;\n  & > *:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nconst Actions = styled.form`\n  display: flex;\n  margin: 12px 0;\n  justify-content: center;\n  & > *:not(:last-child) {\n    margin-right: 3px;\n  }\n  & > *:not(:first-child) {\n    margin-left: 3px;\n  }\n`;\n\nconst Signin = () => {\n  const { control, handleSubmit } = useForm();\n  const history = useHistory();\n  const [_, { loginSuccess }] = useUser();\n  const { error: errorToast } = useSnackbar();\n\n  const [login, { loading }] = useMutation(LOGIN, {\n    onCompleted: (data) => data?.login && loginSuccess(data.login),\n    onError: ({ message }) => errorToast(message, { closable: true }),\n  });\n\n  return (\n    <Paper>\n      <Title>Sign in</Title>\n      <Subtitle>Trados is waiting for u</Subtitle>\n      <Decorator />\n      <Form>\n        <Input\n          name='email'\n          formControl={control}\n          label='Email'\n          type='email'\n          required\n          placeholder='example@gooddoc.fr'\n        />\n        <Input\n          name='password'\n          formControl={control}\n          label='Password'\n          type='password'\n          required\n          placeholder='********'\n        />\n        <Actions>\n          <Button\n            loading={loading}\n            fullWidth\n            type='button'\n            color='primary'\n            variant='contained'\n            size='lg'\n            onClick={handleSubmit(async (values) =>\n              login({ variables: values })\n            )}\n          >\n            Sign in\n          </Button>\n        </Actions>\n        <Actions>You want to contribute? But you don't know how?</Actions>\n        <Actions>\n          <Button onClick={() => history.replace('/sign/up')} color='primary'>\n            Contribute\n          </Button>\n        </Actions>\n      </Form>\n    </Paper>\n  );\n};\n\nexport default Signin;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport Button from 'components/Buttons/Button';\nimport { useHistory } from 'react-router';\nimport QRCode from 'qrcode.react';\n\nconst Paper = styled.div`\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  background-color: ${({ theme }) => theme.background1};\n  padding: 12px 32px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n`;\n\nconst Title = styled.h1`\n  font-size: 18px;\n  text-align: center;\n  font-weight: normal;\n`;\n\nconst Subtitle = styled.h2`\n  font-size: 12px;\n  text-align: center;\n  font-weight: normal;\n`;\n\nconst Decorator = styled.div`\n  height: 3px;\n  width: 50px;\n  background-color: ${({ theme }) => theme.secondary};\n  margin: auto;\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\nconst QRCodeContainer = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Actions = styled.form`\n  display: flex;\n  margin: 12px 0;\n  justify-content: center;\n  & > *:not(:last-child) {\n    margin-right: 3px;\n  }\n  & > *:not(:first-child) {\n    margin-left: 3px;\n  }\n`;\n\nconst Signup = () => {\n  const history = useHistory();\n\n  return (\n    <Paper>\n      <Title>Support us!</Title>\n      <Subtitle>We need you !</Subtitle>\n      <Decorator />\n      <Container>\n        <QRCodeContainer>\n          <QRCode value='http://facebook.github.io/react/' />\n        </QRCodeContainer>\n        <Actions>0xf9e38fA3fA84A4b371f7d3dDeda80D11577C1814</Actions>\n        <Actions>\n          <Button onClick={() => history.replace('/sign/in')} color='secondary'>\n            Sign in\n          </Button>\n        </Actions>\n      </Container>\n    </Paper>\n  );\n};\n\nexport default Signup;\n","import styled from '@emotion/styled';\nimport FlippableContainer from 'components/Layouts/FlippableContainer';\nimport { Signin, Signup } from 'components/Security';\nimport { useUser } from 'contexts/User';\nimport React, { useEffect, useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport routes from 'routes';\nimport qs from 'querystring';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.background2};\n`;\n\nconst Auth = () => {\n  const [{ isAuthenticated }] = useUser();\n  const history = useHistory();\n  const { state } = useParams();\n  const turned = useMemo(() => state !== 'in', [state]);\n\n  const { from } = useMemo(\n    () => qs.parse(window.location.search.replace('?', '')) || {},\n    []\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      return history.replace(from || routes.Home.path);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    if (!['in', 'up'].includes(state)) {\n      return history.replace(`/sign/in`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state]);\n\n  return (\n    <Container>\n      <div>\n        <FlippableContainer\n          turned={turned}\n          frontFace={<Signin />}\n          backFace={<Signup />}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Auth;\n","const componentToHex = (c) => {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\nconst rgbToHex = (r, g, b) =>\n  `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n\nconst hexToRgb = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n};\n\nconst hexToRgbA = (hex, alpha) => {\n  const { r, g, b } = hexToRgb(hex);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nfunction shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n\n  return '#' + RR + GG + BB;\n}\n\nconst lighten = (color) => {\n  return shadeColor(color, 40);\n};\nconst darken = (color) => {\n  return shadeColor(color, -40);\n};\n\nexport { rgbToHex, hexToRgb, hexToRgbA, lighten, darken };\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\nimport Icon from 'components/Icon';\nimport Loader from 'components/Loader/Loader';\nimport Tooltip from 'components/Tooltip';\nimport { useTheme } from '@emotion/react';\n\nconst BaseButton = styled.button`\n  outline-color: ${({ theme, color }) => theme.getColor(color)};\n  padding: 0;\n  margin: 0;\n  border: ${({ theme }) => theme.divider};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : 'auto')};\n  cursor: pointer;\n  padding: ${({ padding }) => padding};\n  font-size: ${({ fontSize }) => fontSize};\n`;\n\nconst ContainedButton = styled(BaseButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({ theme, color }) => theme.forceDefault(color)};\n  color: ${({ theme, color }) => theme.getTextColor(color)};\n  transition: ${({ theme }) => theme.transition};\n  :hover:not(:disabled) {\n    background-color: ${({ theme, color }) => theme.forceDarken(color)};\n  }\n  :disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nconst OutlinedButton = styled(BaseButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({ theme }) => theme.transparent};\n  color: ${({ theme, color }) => theme.getColor(color)};\n  border: ${({ theme, color, naked }) =>\n    naked ? 'none' : `1px solid ${theme.getColor(color)}`};\n  transition: ${({ theme }) => theme.transition};\n  :hover:not(:disabled) {\n    border-color: ${({ theme, color }) => theme.forceDarken(color)};\n    color: ${({ theme, color }) => theme.forceDarken(color)};\n    background: ${({ theme, color }) =>\n      hexToRgbA(theme.forceLighten(color), 0.125)};\n  }\n  :disabled {\n    opacity: 0.7;\n    cursor: default;\n  }\n`;\n\nconst IconContainer = styled.span`\n  margin-right: 6px;\n`;\n\nconst computeSize = (size) => {\n  switch (size) {\n    case 'sm':\n      return {\n        fontSize: '12px',\n        padding: '4px 8px',\n      };\n    default:\n    case 'md':\n      return {\n        fontSize: '13.33px',\n        padding: '6px 12px',\n      };\n    case 'lg':\n      return {\n        fontSize: '14.2px',\n        padding: '8px 16px',\n      };\n  }\n};\n\nconst Button = ({\n  variant,\n  color,\n  loading,\n  disabled,\n  children,\n  type,\n  icon,\n  size,\n  tooltip,\n  ...others\n}) => {\n  const { fontSize, padding } = computeSize(size);\n  const theme = useTheme();\n\n  let ButtonComponent = null;\n\n  switch (variant) {\n    default:\n    case 'outlined':\n    case 'naked':\n      ButtonComponent = OutlinedButton;\n      break;\n    case 'contained':\n      ButtonComponent = ContainedButton;\n      break;\n  }\n\n  if (tooltip)\n    ButtonComponent = ({ children, ...props }) => (\n      <Tooltip title={tooltip}>\n        <ButtonComponent {...props}>{children}</ButtonComponent>\n      </Tooltip>\n    );\n\n  return (\n    <ButtonComponent\n      type={type}\n      {...others}\n      color={color}\n      fontSize={fontSize}\n      padding={padding}\n      disabled={loading || disabled}\n      naked={variant === 'naked'}\n    >\n      {icon && !loading && (\n        <IconContainer>\n          <Icon\n            icon={icon}\n            size='xs'\n            color={variant !== 'contained' ? color : theme.colors.text(color)}\n          />\n        </IconContainer>\n      )}\n      {loading && (\n        <IconContainer>\n          <Loader\n            size='xs'\n            color={variant !== 'contained' ? color : theme.colors.text(color)}\n          />\n        </IconContainer>\n      )}\n      {children}\n    </ButtonComponent>\n  );\n};\n\nButton.defaultProps = {\n  color: 'default',\n  type: 'button',\n  variant: 'outlined',\n  size: 'sm',\n  tooltip: undefined,\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  size: PropTypes.string,\n  tooltip: PropTypes.string,\n  variant: PropTypes.oneOf(['outlined', 'contained']),\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n};\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport React from 'react';\n\nconst Group = styled.div`\n  & > *:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nconst FormGroup = ({ children }) => {\n  return <Group>{children}</Group>;\n};\n\nexport default FormGroup;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport BaseInput from '../BaseInput';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  width: auto;\n  background-color: ${({ theme }) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  &:has(input:focus) {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled(BaseInput)`\n  flex: 1;\n  align-self: stretch;\n  height: 100%;\n  padding: 12px 8px;\n  &[type='color'] {\n    padding: 8px;\n    height: 40px;\n  }\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst Adornement = styled.span`\n  color: ${({ theme }) => theme.greyDarken};\n`;\n\nconst Input = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  helperText,\n  placeholder,\n  startIcon,\n  startAdornement,\n  endIcon,\n  endAdornement,\n  onChange,\n  value,\n}) => (\n  <Container>\n    <Label>\n      {label}\n      {required && '*'}\n    </Label>\n    <FakeInput>\n      {startIcon && <span>{startIcon}</span>}\n      {startAdornement && <Adornement>{startAdornement}</Adornement>}\n      {formControl && (\n        <Controller\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          as={<ControlledInput />}\n        />\n      )}\n      {!formControl && (\n        <ControlledInput\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          onChange={onChange}\n          value={value}\n          placeholder={placeholder}\n        />\n      )}\n      {endAdornement && <span>{endAdornement}</span>}\n      {endIcon && <Adornement>{endIcon}</Adornement>}\n    </FakeInput>\n    {helperText && <HelperText>{helperText}</HelperText>}\n    {errors?.[name] && <Error>{errors[name].message}</Error>}\n  </Container>\n);\n\nInput.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n  name: undefined,\n  value: undefined,\n  onChange: undefined,\n};\n\nInput.propTypes = {\n  name: PropTypes.string,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Input;\n","import styled from '@emotion/styled';\n\nconst BaseTextArea = styled.textarea`\n  // reset\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: ${({ theme }) => theme.white};\n  outline: none;\n  font-family: inherit;\n`;\n\nexport default BaseTextArea;\n","import styled from '@emotion/styled';\nimport React, { createRef, useCallback, useEffect } from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\nimport BaseTextArea from '../BaseTextArea';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${(theme) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  & textarea:focus {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled(BaseTextArea)`\n  flex: 1;\n  align-self: stretch;\n  height: 100%;\n  padding: 12px 8px;\n  &[type='color'] {\n    padding: 8px;\n    height: 40px;\n  }\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst TextArea = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  rows,\n  helperText,\n  placeholder,\n}) => {\n  const textAreaRef = createRef();\n\n  const resize = useCallback(() => {\n    textAreaRef.current.style.height = 'auto';\n    textAreaRef.current.style.height = textAreaRef.current.scrollHeight + 'px';\n  }, [textAreaRef]);\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      resize();\n    }\n  }, [resize, textAreaRef]);\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.addEventListener('keydown', function (e) {\n        if (e.key === 'Tab') {\n          e.preventDefault();\n          let start = this.selectionStart;\n          let end = this.selectionEnd;\n\n          this.value =\n            this.value.substring(0, start) + '\\t' + this.value.substring(end);\n\n          this.selectionStart = this.selectionEnd = start + 1;\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [textAreaRef.current?.value]);\n\n  const handleChange = (e, cb) => {\n    resize();\n    cb(e);\n  };\n\n  return (\n    <Container>\n      <Label>\n        {label}\n        {required && '*'}\n      </Label>\n      <FakeInput>\n        <Controller\n          autoFocus={autoFocus}\n          control={formControl}\n          rules={rules}\n          name={name}\n          type={type}\n          required={required}\n          disabled={disabled}\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n          rows={rows}\n          render={({ onChange, value }) => (\n            <ControlledInput\n              ref={textAreaRef}\n              onChange={(e) => handleChange(e, onChange)}\n              value={value}\n            />\n          )}\n        />\n      </FakeInput>\n      {helperText && <HelperText>{helperText}</HelperText>}\n      {errors?.[name] && <Error>{errors[name].message}</Error>}\n    </Container>\n  );\n};\n\nTextArea.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n  rows: 5,\n};\n\nTextArea.propTypes = {\n  name: PropTypes.string.isRequired,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  rows: PropTypes.number,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default TextArea;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { hexToRgbA } from 'theme/utils';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > *:not(:last-child) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 11px;\n  font-weight: bold;\n`;\n\nconst FakeInput = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  background-color: ${(theme) => theme.white};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  border: ${({ theme }) => theme.divider};\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  & select:focus {\n    box-shadow: ${({ theme }) =>\n      `0px 0px 2px 3px ${hexToRgbA(theme.primary, 0.3)}`};\n  }\n  & > *:not(:last-child) {\n    margin-left: 6px;\n  }\n`;\n\nconst ControlledInput = styled.select`\n  outline: none;\n  height: 100%;\n  width: 100%;\n  margin-right: 6px;\n  padding: 12px 8px;\n  border: none;\n  background-color: ${(theme) => theme.white};\n`;\n\nconst Error = styled(Label)`\n  color: ${({ theme }) => theme.errorDarken};\n  font-weight: normal;\n`;\n\nconst HelperText = styled(Label)`\n  color: ${({ theme }) => theme.greyDarken};\n  font-weight: normal;\n`;\n\nconst Select = ({\n  formControl,\n  autoFocus,\n  rules,\n  errors,\n  label,\n  name,\n  defaultValue,\n  type,\n  required,\n  disabled,\n  helperText,\n  placeholder,\n  options,\n}) => (\n  <Container>\n    <Label>\n      {label}\n      {label && required && '*'}\n    </Label>\n    <FakeInput>\n      <Controller\n        autoFocus={autoFocus}\n        control={formControl}\n        rules={rules}\n        name={name}\n        type={type}\n        required={required}\n        disabled={disabled}\n        defaultValue={defaultValue}\n        placeholder={placeholder}\n        as={<ControlledInput />}\n      >\n        {placeholder && <option value={null}>{placeholder}</option>}\n        {options.map((opt) => (\n          <option value={opt.value}>{opt.label}</option>\n        ))}\n      </Controller>\n    </FakeInput>\n    {helperText && <HelperText>{helperText}</HelperText>}\n    {errors?.[name] && <Error>{errors[name].message}</Error>}\n  </Container>\n);\n\nSelect.defaultProps = {\n  rules: {},\n  defaultValue: undefined,\n  autoFocus: false,\n};\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  rules: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Select;\n","import styled from '@emotion/styled';\n\nconst BaseInput = styled.input`\n  // reset\n  border: none;\n  margin: 0;\n  padding: 0;\n  background-color: ${({ theme }) => theme.white};\n  outline: none;\n`;\n\nexport default BaseInput;\n"],"sourceRoot":""}